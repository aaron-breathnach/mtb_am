BiocManager::install("densviz")
BiocManager::install("densvis")
BiocManager::install("densvis")
BiocManager::install("densvis")
BiocManager::install("densvis")
library(RcppML)
sce <- readRDS("~/Desktop/zhang_2021/data/pbmc_in_vivo.rds")
sce@meta.data
sce@meta.data %>%
as_tibble()
library(tidyverse)
sce@meta.data %>%
as_tibble()
meta <- sce@meta.data %>%
as_tibble()
colnames(meta)
meta %>%
select(time, stim)
meta %>%
select(time, stim) %>%
pull(stim) %>%
unique()
meta %>%
select(time, stim) %>%
distinct()
sce
list_th17.1_cells <- function(sce) {
sig_th17 <- list(Th17 = c("RORC", "CCR6", "KLRB1", "IL23R", "CCL20"))
sig_th1  <- list(Th1  = c("IFNG", "TNF", "TBX21", "CXCR3"))
sce <- UCell::ScoreSignatures_UCell(sce, features = sig_th17)
cells <- list_target_cells(sce)
if (length(cells) > 0) {
sce <- sce[, colnames(sce) %in% cells] %>%
UCell::ScoreSignatures_UCell(features = sig_th1)
list_target_cells(sce)
}
}
annotate_th17.1 <- function(sce) {
th17.1_cells <- list_th17.1_cells(sce)
sce$Th17.1 <- ifelse(colnames(sce) %in% th17.1_cells, 1, 0)
return(sce)
}
make_sce <- function(x) {
rds <- x %>%
str_replace(".txt", ".rds")
if (!file.exists(rds)) {
sce <- import_data(x) %>%
annotate_th17.1()
saveRDS(sce, rds)
}
}
colnames(meta)
meta
sce@meta.data %>%
as_tibble() %>%
select(Sample_assign, description_demultiplex, time, stim)
sce@meta.data %>%
as_tibble() %>%
select(Sample_assign, description_demultiplex, time, stim) %>%
distinct()
sce@meta.data %>%
as_tibble() %>%
select(Sample_assign, description_demultiplex, time, stim) %>%
distinct() %>%
as.data.frame()
meta <- sce@meta.data %>%
as_tibble()
meta
sce@meta.data %>%
as_tibble() %>%
select(time, stim, Sample_assign) %>%
setNames(c("time", "stim", "sample_id"))
sce@meta.data
sce@meta.data %>%
rownames_to_column("cell") %>%
as_tibble() %>%
select(time, stim, Sample_assign) %>%
setNames(c("time", "stim", "sample_id"))
meta <- sce@meta.data %>%
rownames_to_column("cell") %>%
as_tibble() %>%
select(cell, time, stim, Sample_assign) %>%
setNames(c("cell", "time", "stim", "sample_id"))
meta
sce <- readRDS("~/Desktop/zhang_2021/data/pbmc_in_vivo.rds") %>%
Seurat::as.SingleCellExperiment()
sce <- readRDS("~/Desktop/zhang_2021/data/pbmc_in_vivo.rds")
sce <- scGate::scGate(sce, model = mod_th17.1, save.levels = TRUE, ncores = 4)
sig_th17 <- paste0(c("RORC", "CCR6", "KLRB1", "IL23R", "CCL20"), collapse = ";")
sig_th1  <- paste0(c("IFNG", "TNF", "TBX21", "CXCR3"), collapse = ";")
mod_th17.1 <- data.frame(levels    = c("level1", "level2"),
use_as    = c("positive", "positive"),
name      = c("Th17", "Th1"),
signature = c(paste0(sig_th17, collapse = ";"),
paste0(sig_th1, collapse = ";")))
sce <- scGate::scGate(sce, model = mod_th17.1, save.levels = TRUE, ncores = 4)
sce@meta.data
sce@meta.data %>%
filter(Th17_UCell > 0.2 & Th1_UCell > 0.2)
sce@meta.data %>%
filter(Th17_UCell >= 0.2 & Th1_UCell >= 0.2)
sce@meta.data %>%
filter(Th17_UCell >= 0.1 & Th1_UCell >= 0.1)
sce@meta.data %>%
filter(Th17_UCell >= 0.15 & Th1_UCell >= 0.15)
sce@meta.data %>%
filter(Th17_UCell >= 0.2 & Th1_UCell >= 0.2)
sig_th17 <- paste0(c("RORC", "CCR6", "KLRB1", "IL23R", "CCL20"), collapse = ";")
sig_th1  <- paste0(c("IFNG", "TNF", "TBX21", "CXCR3"), collapse = ";")
sig_th17
c(paste0(sig_th17, collapse = ";")
c(paste0(sig_th17, collapse = ";"),
paste0(sig_th1, collapse = ";"))
c(sig_th17, sig_th1)
data.frame(levels    = c("level1", "level2"),
use_as    = c("positive", "positive"),
name      = c("Th17", "Th1"),
signature = c(sig_th17, sig_th1))
data.frame(levels    = c("level1", "level2"),
use_as    = c("positive", "positive"),
name      = c("Th17", "Th1"),
signature = c(sig_th17, sig_th1))
mod_th17.1
sce
?Seurat::DimPlot()
Seurat::DimPlot(group.by = Th17_UCell)
Seurat::DimPlot(sce, group.by = Th17_UCell)
Seurat::DimPlot(sce, group.by = Th17.1_UCell)
Seurat::DimPlot(sce, group.by = "Th17_UCell")
Seurat::DimPlot(sce, group.by = "Th17_UCell")
Seurat::FeaturePlot(sce, "Th17_UCell")
Seurat::FeaturePlot(sce, "Th1_UCell")
Seurat::FeaturePlot(sce, c("Th1_UCell", "Th17_UCell"))
Seurat::DimPlot(sce, group.by = "Th17_UCell")
Seurat::FeaturePlot(sce, c("Th1_UCell", "Th17_UCell", sig_th17))
Seurat::FeaturePlot(sce, c("Th1_UCell", "Th17_UCell", "RORC", "CCR6", "KLRB1", "IL23R", "CCL20"))
Seurat::FeaturePlot(sce, c("Th1_UCell", "Th17_UCell",
"RORC", "CCR6", "KLRB1", "IL23R", "CCL20",
"IFNG", "TNF", "TBX21", "CXCR3"))
sce@meta.data <- sce@meta.data %>%
mutate(Th17.1 = ifelse(Th17_UCell >= 0.1 & Th1_UCell >= 0.1, 1, 0))
Seurat::FeaturePlot(sce, c("Th1_UCell", "Th17_UCell", "Th17.1",
"RORC", "CCR6", "KLRB1", "IL23R", "CCL20",
"IFNG", "TNF", "TBX21", "CXCR3"))
sce@assays$RNA@counts
sce@assays$RNA@counts["RORC",]
sce@assays$RNA@counts["RORC",] > 0
mat <- sce@assays$RNA@counts
mat["RORC",] > 0
mat[, mat["RORC",] > 0]
mat["RORC",] > 0
mat[, mat["RORC",] > 0]
ncol(mat[, mat["RORC",] > 0])
mat["RORC", mat["RORC",] > 0]
BiocManager::install("scRecover")
Seurat::FeaturePlot(sce, c("IL17A"))
Seurat::FeaturePlot(sce, c("IL17"))
Seurat::FeaturePlot(sce, c("CSF2"))
mat["CSF2", mat["CSF2",] > 0]
ncol(mat["CSF2", mat["CSF2",] > 0])
length(mat["CSF2", mat["CSF2",] > 0])
?scGate
sce <- scGate::scGate(sce,
model = mod_th17.1,
ncores = 4,
min.cells = 10,
k.param = 10,
save.levels = TRUE)
sce <- scGate::scGate(sce,
model = mod_th17.1,
ncores = 4,
min.cells = 5,
k.param = 5,
save.levels = TRUE)
sce <- scGate::scGate(sce,
model = mod_th17.1,
ncores = 4,
min.cells = 1,
k.param = 5,
save.levels = TRUE)
sce <- scGate::scGate(sce,
model = mod_th17.1,
ncores = 4,
min.cells = 1,
k.param = 1,
save.levels = TRUE)
Seurat::FeaturePlot(sce, c("Th1_UCell", "Th17_UCell", "Th17.1",
"RORC", "CCR6", "KLRB1", "IL23R", "CCL20",
"IFNG", "TNF", "TBX21", "CXCR3"))
sce@meta.data
Seurat::FeaturePlot(sce, "Th17.1")
sce
sce <- scGate::scGate(sce,
model = mod_th17.1,
ncores = 4,
min.cells = 1,
k.param = 1,
save.levels = TRUE)
Seurat::FeaturePlot(sce, "Th17.1")
sce <- readRDS("~/Desktop/zhang_2021/data/pbmc_in_vivo.rds")
sce <- scGate::scGate(sce,
model = mod_th17.1,
ncores = 4,
min.cells = 1,
k.param = 1,
save.levels = TRUE)
colnames(sce@meta.data)
Seurat::DimPlot(sce, group.by = "is.pure")
models.DB <- scGate::get_scGateDB()
models.DB$human$CD4_TIL
models.DB$human$generic
models.DB$human$generic$CD4T
sig_cd4  <- paste0("CD4;CD40LG;CD2;CD3D;CD3E;CD3G")
sig_cd4  <- "CD4;CD40LG;CD2;CD3D;CD3E;CD3G"
sig_th17 <- "RORC;CCR6;KLRB1;IL23R;CCL20"
sig_th1  <- "IFNG;TNF;TBX21;CXCR3"
mod_th17.1 <- data.frame(levels    = c("level1", "level2", "level3"),
use_as    = c("positive", "positive", "positive"),
name      = c("CD4", "Th17", "Th1"),
signature = c(sig_cd4, sig_th17, sig_th1))
sce <- readRDS("~/Desktop/zhang_2021/data/pbmc_in_vivo.rds")
sce <- scGate::scGate(sce,
model = mod_th17.1,
ncores = 4,
min.cells = 1,
k.param = 1,
save.levels = TRUE)
Seurat::FeaturePlot(sce, "Th17.1")
Seurat::DimPlot(sce, group.by = "is.pure")
sce@meta.data
meta <- sce@meta.data %>%
rownames_to_column("cell") %>%
as_tibble() %>%
select(cell, time, stim, Sample_assign) %>%
setNames(c("cell", "time", "stim", "sample_id"))
meta
meta <- sce@meta.data %>%
rownames_to_column("cell") %>%
as_tibble() %>%
select(cell, time, stim, Sample_assign) %>%
setNames(c("cell", "time", "stim", "sample_id", "is.pure"))
meta
meta <- sce@meta.data %>%
rownames_to_column("cell") %>%
as_tibble() %>%
select(cell, time, stim, Sample_assign) %>%
setNames(c("cell", "time", "stim", "sample_id", "is.pure"))
meta
meta <- sce@meta.data %>%
rownames_to_column("cell") %>%
as_tibble() %>%
select(cell, time, stim, Sample_assign, is.pure) %>%
setNames(c("cell", "time", "stim", "sample_id", "is.pure"))
meta
meta %>%
filter(is.pure == "Pure")
meta %>%
filter(is.pure == "Pure") %>%
group_by(time, stim, sample_id) %>%
tally()
sce <- scGate::scGate(sce,
model = mod_th17.1,
ncores = 4,
min.cells = 1,
k.param = 1,
pca.dim = 50,
save.levels = TRUE)
meta %>%
filter(is.pure == "Pure") %>%
group_by(time, stim, sample_id) %>%
tally()
p_inp <- meta %>%
filter(is.pure == "Pure") %>%
group_by(time, stim) %>%
tally()
p_inp
meta
meta %>%
group_by(time, stim) %>%
tally()
total <- meta %>%
group_by(time, stim) %>%
tally()
total <- meta %>%
group_by(time, stim) %>%
tally() %>%
ungroup()
meta
meta %>%
filter(is.pure == "Pure")
meta %>%
filter(is.pure == "Pure") %>%
group_by(time, stim) %>%
tally()
meta %>%
group_by(time, stim) %>%
summarise(total = n()) %>%
ungroup()
total <- meta %>%
group_by(time, stim) %>%
summarise(total = n()) %>%
ungroup()
meta %>%
filter(is.pure == "Pure") %>%
group_by(time, stim) %>%
summarise(th17.1 = n())
meta %>%
p_inp <- meta %>%
filter(is.pure == "Pure") %>%
group_by(time, stim) %>%
summarise(th17.1 = n()) %>%
ungroup() %>%
inner_join(total, by = c("time", "stim"))
meta %>%
filter(is.pure == "Pure") %>%
group_by(time, stim) %>%
summarise(th17.1 = n()) %>%
ungroup()
total <- meta %>%
group_by(time, stim) %>%
summarise(total = n()) %>%
ungroup()
p_inp <- meta %>%
filter(is.pure == "Pure") %>%
group_by(time, stim) %>%
summarise(th17.1 = n()) %>%
ungroup() %>%
inner_join(total, by = c("time", "stim"))
p_inp
meta %>%
filter(is.pure == "Pure") %>%
group_by(time, stim) %>%
tally() %>%
ungroup() %>%
inner_join(total, by = c("time", "stim")) %>%
mutate(perc = 100 * n / total)
p_inp <- meta %>%
filter(is.pure == "Pure") %>%
group_by(time, stim) %>%
tally() %>%
ungroup() %>%
inner_join(total, by = c("time", "stim")) %>%
mutate(perc = 100 * n / total)
ggplot(p_inp, aes(x = stim, y = perc)) +
geom_bar(stat = "identity", aes(fill = time))
ggplot(p_inp, aes(x = stim, y = perc)) +
geom_bar(stat = "identity",
position = "dodge",
aes(fill = time))
p_inp <- meta %>%
filter(is.pure == "Pure") %>%
group_by(time, stim) %>%
tally() %>%
ungroup() %>%
inner_join(total, by = c("time", "stim")) %>%
mutate(perc = 100 * n / total) %>%
mutate(time = ifelse(grepl("after", time), "After", "Before")) %>%
mutate(time = factor(time, levels = c("Before", "After")))
ggplot(p_inp, aes(x = stim, y = perc)) +
geom_bar(stat = "identity",
position = "dodge",
aes(fill = time))
ggplot(p_inp, aes(x = stim, y = perc)) +
geom_bar(stat = "identity",
position = "dodge",
aes(fill = time)) +
theme_classic(base_size = 12.5)
ggplot(p_inp, aes(x = stim, y = perc)) +
geom_bar(stat = "identity",
position = "dodge",
aes(fill = time),
colour = "black") +
theme_classic(base_size = 12.5)
ggplot(p_inp, aes(x = stim, y = perc)) +
geom_bar(stat = "identity",
position = "dodge",
aes(fill = time),
colour = "black") +
theme_classic(base_size = 12.5) +
scale_y_continuous(expand = expansion(mult = c(0, 0.1)))
ggplot(p_inp, aes(x = stim, y = perc)) +
geom_bar(stat = "identity",
position = "dodge",
aes(fill = time),
colour = "black") +
theme_classic(base_size = 12.5) +
scale_y_continuous(expand = expansion(mult = c(0, 0.1))) +
labs(x = "Stimulus", y = "%", fill = "Time point")
p_inp <- meta %>%
filter(is.pure == "Pure") %>%
group_by(time, stim) %>%
tally() %>%
ungroup() %>%
inner_join(total, by = c("time", "stim")) %>%
mutate(perc = 100 * n / total) %>%
mutate(time = ifelse(grepl("before", time), "Pre-vax", "Post-vax")) %>%
mutate(time = factor(time, levels = c("Pre-vax", "Post-vax")))
ggplot(p_inp, aes(x = stim, y = perc)) +
geom_bar(stat = "identity",
position = "dodge",
aes(fill = time),
colour = "black") +
theme_classic(base_size = 12.5) +
scale_y_continuous(expand = expansion(mult = c(0, 0.1))) +
labs(x = "Stimulus", y = "%", fill = "Time point")
ggplot(p_inp, aes(x = stim, y = perc)) +
geom_bar(stat = "identity",
position = "dodge",
aes(fill = time),
colour = "black") +
theme_classic(base_size = 12.5) +
scale_y_continuous(expand = expansion(mult = c(0, 0.1))) +
labs(x = "Stimulus", y = "Relative abundance (%)", fill = "Time point")
setwd("~/Desktop/help/kevin_brown/mtb_am")
